shiny::runApp()
runApp()
runApp()
gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/pubhtml?gid=0&single=true") %>% gs_read
library(googlesheets)
suppressMessages(library(dplyr))
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/pubhtml?gid=0&single=true") %>% gs_read
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/pubhtml?gid=0&single=true")
my_data <- sheet %>% gs_read
my_data <- sheet %>% gs_read
library(googlesheets)
suppressMessages(library(dplyr))
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/pubhtml?gid=0&single=true")
my_data <- sheet %>% gs_read
my_data <- gs_read(sheet)
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/edit?usp=sharing")
my_data <- sheet %>% gs_read
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/edit?usp=sharing")
my_data <- sheet %>% gs_read
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/edit?usp=sharing")
rm()
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/edit?usp=sharing")
my_data <- sheet %>% gs_read
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/pub?gid=0&single=true&output=csv")
my_data <- gs_read(sheet)
my_data <- gs_read_csv(sheet)
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/edit?usp=sharing")
my_data <- gs_read(sheet)
View(my_data)
View(my_data)
my_data$date <- as.Date(my_data$date, "%d/%m/%Y")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
makeTable(makeFit())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Sys.time()
Sys.Date()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
q()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(my_data)
sheet <- gs_url("https://docs.google.com/spreadsheets/d/18NUQKoGEH3fFEj26mAsbmoPHN87oRtiwZrEp0dtkKIc/edit?usp=sharing")
my_data <- gs_read(sheet)
my_data$date <- as.Date(my_data$date, "%d/%m/%Y")
runApp()
hTarget <- 50
substrate <- "Silicon"
class(substrate)
class(hTarget)
x <- subset(data,
target == as.numeric(hTarget),
select = "thickness")
x <- subset(my_data,
target == as.numeric(hTarget),
select = "thickness")
x <- subset(my_data,
target == as.numeric(hTarget) & substrate == substrate,
select = "thickness")
unique(my_data$substrate)
unique(my_data$substrate)[1]
unique(my_data$substrate)[1] == substrate
unique(my_data$substrate)[2] == substrate
substrate <- unique(my_data$substrate)[2]
x <- subset(my_data,
+             target == as.numeric(hTarget) & substrate == substrate,
+             select = "thickness")
x <- subset(my_data,
target == as.numeric(hTarget) & substrate == substrate,
select = "thickness")
View(x)
substrate <- "blq"
x <- subset(my_data,
target == as.numeric(hTarget) & substrate == substrate,
select = "thickness")
?equal
my_data$substrate <- as.factor(my_data$substrate)
my_data$substrate
uniqie(my_data$substrate)
unique(my_data$substrate)
unique(my_data$substrate)[1]
unique(my_data$substrate)[1] == "Silicon"
unique(my_data$substrate)[1] == "Quartz"
unique(my_data$substrate)[1] == substrate
substrate <- "Quartz"
unique(my_data$substrate)[1] == substrate
unique(my_data$substrate)[2] == substrate
subset(my_data,
target == as.numeric(hTarget) & substrate == substrate,
select = "thickness")
subset(my_data,
substrate == substrate,
select = "thickness")
subset(my_data,
substrate == substrate,
select = c("thickness","substrate")
)
subset(my_data,
substrate == "Quartz",
select = c("thickness","substrate"))
my_sub <- "Quartz"
subset(my_data,
substrate == my_sub,
select = c("thickness","substrate"))
runApp()
if (tSubstrate == "All") {
runApp()
attributes(my_data$substrate)
my_data$substrate$levels
levels(my_data$substrate)
levels(my_data$substrate)[1]
runApp()
runApp()
shiny::runApp()
